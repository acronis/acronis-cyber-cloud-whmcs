<?php
/**
 * SettingSchema
 *
 * PHP version 5
 *
 * @category Class
 * @package  Acronis\Cloud\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * REST API v2 description for Multi-service Portal
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Acronis\Cloud\Client\Model\Settings;

use Acronis\Cloud\Client\BaseModel;
/**
 * SettingSchema Class Doc Comment
 *
 * @category    Class
 * @package     Acronis\Cloud\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SettingSchema extends BaseModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Settings\SettingSchema';

    /**
     * Array of property to type mappings. Used for (de)serialization
     * @return array
     */
    public static function swaggerTypes()
    {
        return [
            'name' => 'string',
            'inheritance_type' => '\Acronis\Cloud\Client\Model\Settings\SettingSchemaInheritanceType',
            'business_type' => '\Acronis\Cloud\Client\Model\Settings\SettingSchemaBusinessType'
        ];
    }


    /**
     * Array of property to format mappings. Used for (de)serialization
     * @return array
     */
    public static function swaggerFormats()
    {
        return [
            'name' => null,
            'inheritance_type' => null,
            'business_type' => null
        ];
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @return array
     */
    public static function attributeMap()
    {
        return [
            'name' => 'name',
            'inheritance_type' => 'inheritance_type',
            'business_type' => 'business_type'
        ];
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @return array
     */
    public static function setters()
    {
        return [
            'name' => 'setName',
            'inheritance_type' => 'setInheritanceType',
            'business_type' => 'setBusinessType'
        ];
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @return array
     */
    public static function getters()
    {
        return [
            'name' => 'getName',
            'inheritance_type' => 'getInheritanceType',
            'business_type' => 'getBusinessType'
        ];
    }

    /**
     * Array of attributes to checkers functions (for deserialization of responses)
     * @return array
     */
    public static function checkers()
    {
        return [
            'name' => 'hasName',
            'inheritance_type' => 'hasInheritanceType',
            'business_type' => 'hasBusinessType'
        ];
    }

    /**
     * Array of attributes to validators functions (for deserialization of responses)
     * @return array
     */
    public static function validators() {
        return [
            'name' => 'validateName',
            'inheritance_type' => 'validateInheritanceType',
            'business_type' => 'validateBusinessType'
        ];
    }

    

    

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if (!empty($this->validateName())) {
            $invalid_properties[] = $this->validateName();
        }
        if (!empty($this->validateInheritanceType())) {
            $invalid_properties[] = $this->validateInheritanceType();
        }
        if (!empty($this->validateBusinessType())) {
            $invalid_properties[] = $this->validateBusinessType();
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        if (!empty($this->validateName())) {
            return false;
        }
        if (!empty($this->validateInheritanceType())) {
            return false;
        }
        if (!empty($this->validateBusinessType())) {
            return false;
        }
        return true;
    }


    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->offsetGet('name');
    }

    /**
     * Checks name
     * @return boolean
     */
    public function hasName()
    {
        return $this->offsetExists('name');
    }

    /**
     * Sets name
     * @param string $name Unique name that will serve as the setting's identifier
     * @return $this
     */
    public function setName($name)
    {
        $this->offsetSet('name', $name);

        return $this;
    }

    /**
     * Unset name
     */
    public function unsetName() {
        $this->offsetUnset('name');
    }

    /**
     * Valid name
     * @return array|boolean
     */
    public function validateName()
    {
        if (!$this->offsetExists('name')) {
            return "Property 'name' was not initialized.";
        }
        return false;
    }


    /**
     * Gets inheritance_type
     * @return \Acronis\Cloud\Client\Model\Settings\SettingSchemaInheritanceType
     */
    public function getInheritanceType()
    {
        return $this->offsetGet('inheritance_type');
    }

    /**
     * Checks inheritance_type
     * @return boolean
     */
    public function hasInheritanceType()
    {
        return $this->offsetExists('inheritance_type');
    }

    /**
     * Sets inheritance_type
     * @param \Acronis\Cloud\Client\Model\Settings\SettingSchemaInheritanceType $inheritance_type
     * @return $this
     */
    public function setInheritanceType($inheritance_type)
    {
        $this->offsetSet('inheritance_type', $inheritance_type);

        return $this;
    }

    /**
     * Unset inheritance_type
     */
    public function unsetInheritanceType() {
        $this->offsetUnset('inheritance_type');
    }

    /**
     * Valid inheritance_type
     * @return array|boolean
     */
    public function validateInheritanceType()
    {
        if (!$this->offsetExists('inheritance_type')) {
            return "Property 'inheritance_type' was not initialized.";
        }
        return false;
    }


    /**
     * Gets business_type
     * @return \Acronis\Cloud\Client\Model\Settings\SettingSchemaBusinessType
     */
    public function getBusinessType()
    {
        return $this->offsetGet('business_type');
    }

    /**
     * Checks business_type
     * @return boolean
     */
    public function hasBusinessType()
    {
        return $this->offsetExists('business_type');
    }

    /**
     * Sets business_type
     * @param \Acronis\Cloud\Client\Model\Settings\SettingSchemaBusinessType $business_type
     * @return $this
     */
    public function setBusinessType($business_type)
    {
        $this->offsetSet('business_type', $business_type);

        return $this;
    }

    /**
     * Unset business_type
     */
    public function unsetBusinessType() {
        $this->offsetUnset('business_type');
    }

    /**
     * Valid business_type
     * @return array|boolean
     */
    public function validateBusinessType()
    {
        if (!$this->offsetExists('business_type')) {
            return "Property 'business_type' was not initialized.";
        }
        return false;
    }

}


