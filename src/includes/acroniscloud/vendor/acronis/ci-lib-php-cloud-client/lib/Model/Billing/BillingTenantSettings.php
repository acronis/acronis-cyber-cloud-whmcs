<?php
/**
 * BillingTenantSettings
 *
 * PHP version 5
 *
 * @category Class
 * @package  Acronis\Cloud\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * REST API v2 description for Multi-service Portal
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Acronis\Cloud\Client\Model\Billing;

use Acronis\Cloud\Client\BaseModel;
/**
 * BillingTenantSettings Class Doc Comment
 *
 * @category    Class
 * @package     Acronis\Cloud\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BillingTenantSettings extends BaseModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Billing\BillingTenantSettings';

    /**
     * Array of property to type mappings. Used for (de)serialization
     * @return array
     */
    public static function swaggerTypes()
    {
        return [
            'mode' => '\Acronis\Cloud\Client\Model\Billing\BillingTenantSettingsMode',
            'usage_calculation_mode' => '\Acronis\Cloud\Client\Model\Billing\BillingTenantSettingsUsageCalculationMode',
            'version' => 'int'
        ];
    }


    /**
     * Array of property to format mappings. Used for (de)serialization
     * @return array
     */
    public static function swaggerFormats()
    {
        return [
            'mode' => null,
            'usage_calculation_mode' => null,
            'version' => 'int32'
        ];
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @return array
     */
    public static function attributeMap()
    {
        return [
            'mode' => 'mode',
            'usage_calculation_mode' => 'usage_calculation_mode',
            'version' => 'version'
        ];
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @return array
     */
    public static function setters()
    {
        return [
            'mode' => 'setMode',
            'usage_calculation_mode' => 'setUsageCalculationMode',
            'version' => 'setVersion'
        ];
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @return array
     */
    public static function getters()
    {
        return [
            'mode' => 'getMode',
            'usage_calculation_mode' => 'getUsageCalculationMode',
            'version' => 'getVersion'
        ];
    }

    /**
     * Array of attributes to checkers functions (for deserialization of responses)
     * @return array
     */
    public static function checkers()
    {
        return [
            'mode' => 'hasMode',
            'usage_calculation_mode' => 'hasUsageCalculationMode',
            'version' => 'hasVersion'
        ];
    }

    /**
     * Array of attributes to validators functions (for deserialization of responses)
     * @return array
     */
    public static function validators() {
        return [
            'mode' => 'validateMode',
            'usage_calculation_mode' => 'validateUsageCalculationMode',
            'version' => 'validateVersion'
        ];
    }

    

    

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if (!empty($this->validateMode())) {
            $invalid_properties[] = $this->validateMode();
        }
        if (!empty($this->validateUsageCalculationMode())) {
            $invalid_properties[] = $this->validateUsageCalculationMode();
        }
        if (!empty($this->validateVersion())) {
            $invalid_properties[] = $this->validateVersion();
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        if (!empty($this->validateMode())) {
            return false;
        }
        if (!empty($this->validateUsageCalculationMode())) {
            return false;
        }
        if (!empty($this->validateVersion())) {
            return false;
        }
        return true;
    }


    /**
     * Gets mode
     * @return \Acronis\Cloud\Client\Model\Billing\BillingTenantSettingsMode
     */
    public function getMode()
    {
        return $this->offsetGet('mode');
    }

    /**
     * Checks mode
     * @return boolean
     */
    public function hasMode()
    {
        return $this->offsetExists('mode');
    }

    /**
     * Sets mode
     * @param \Acronis\Cloud\Client\Model\Billing\BillingTenantSettingsMode $mode
     * @return $this
     */
    public function setMode($mode)
    {
        $this->offsetSet('mode', $mode);

        return $this;
    }

    /**
     * Unset mode
     */
    public function unsetMode() {
        $this->offsetUnset('mode');
    }

    /**
     * Valid mode
     * @return array|boolean
     */
    public function validateMode()
    {
        if (!$this->offsetExists('mode')) {
            return "Property 'mode' was not initialized.";
        }
        return false;
    }


    /**
     * Gets usage_calculation_mode
     * @return \Acronis\Cloud\Client\Model\Billing\BillingTenantSettingsUsageCalculationMode
     */
    public function getUsageCalculationMode()
    {
        return $this->offsetGet('usage_calculation_mode');
    }

    /**
     * Checks usage_calculation_mode
     * @return boolean
     */
    public function hasUsageCalculationMode()
    {
        return $this->offsetExists('usage_calculation_mode');
    }

    /**
     * Sets usage_calculation_mode
     * @param \Acronis\Cloud\Client\Model\Billing\BillingTenantSettingsUsageCalculationMode $usage_calculation_mode
     * @return $this
     */
    public function setUsageCalculationMode($usage_calculation_mode)
    {
        $this->offsetSet('usage_calculation_mode', $usage_calculation_mode);

        return $this;
    }

    /**
     * Unset usage_calculation_mode
     */
    public function unsetUsageCalculationMode() {
        $this->offsetUnset('usage_calculation_mode');
    }

    /**
     * Valid usage_calculation_mode
     * @return array|boolean
     */
    public function validateUsageCalculationMode()
    {
        if (!$this->offsetExists('usage_calculation_mode')) {
            return "Property 'usage_calculation_mode' was not initialized.";
        }
        return false;
    }


    /**
     * Gets version
     * @return int
     */
    public function getVersion()
    {
        return $this->offsetGet('version');
    }

    /**
     * Checks version
     * @return boolean
     */
    public function hasVersion()
    {
        return $this->offsetExists('version');
    }

    /**
     * Sets version
     * @param int $version Auto-incremented entity version
     * @return $this
     */
    public function setVersion($version)
    {
        $this->offsetSet('version', $version);

        return $this;
    }

    /**
     * Unset version
     */
    public function unsetVersion() {
        $this->offsetUnset('version');
    }

    /**
     * Valid version
     * @return array|boolean
     */
    public function validateVersion()
    {
        if (!$this->offsetExists('version')) {
            return "Property 'version' was not initialized.";
        }
        return false;
    }

}


